data = [
  {headline: "Games", 
  projects: 
  	[{name: "Friday", 
  		technologies: "Python, Panda 3D game engine, Git, Bullet physics simulation", 
  		description: "I have designed and developed a 3D platform game in Python in conjunction with Panda 3D game engine. Extra care and attention have been put into the initial game ideas, game mechanics, and level design. I also developed a customized menu system to give the game a unified feeling in both visual and sound design. This game has won first place at LiU Game Awards (Game design competition) in 2012.",
  		imgurl: "friday.png",
        link: "https://www.youtube.com/watch?v=cbJjf11MDmo",
        linktxt: "Demo video"},
    {name: "Bunny Island", 
  		technologies: "C, OpenGL, Glew and Glut, 3D programming, Shader Programming (GLSL), Git", 
  		description: "I have designed and developed a 3D OpenGL first person shooter game, including physics simulation, collisions, game logic, input handling and graphics rendering. This includes writing code that updates the camera matrix, handling coordinate space transformations and implementing phong reflections in GLSL.",
  		imgurl: "bunnyisland.png",
        link: "",
        linktxt: ""},
    {name: "Deep Space", 
  		technologies: "C++, SDL, OpenGL, Glew, Git, Box2D physics, Shader Programming, Emscripten cross-compiling", 
  		description: "I have designed and developed a 2D space puzzle game where a player has to find a way to pass some patrolling enemy space ships in order to get to a goal. I wrote my own OpenGL code to render all the graphics used in the game, while Box2D provides the underlying physics and collision simulation. I designed a level specification to dynamically load and save a level on file. The game is Emscripten compatible by design and can therefore be cross-compiled to run in a web browser.",
  		imgurl: "deepspace.png",
        link: "http://cleaton.github.io/deepspace/",
        linktxt: "Web version of the game"}]},
  




{headline: "projects", 
  	projects: 
  	[{name: "100,000 Integers Sorting", 
  		technologies: "Multicore programming, C, Threads, Bucket Sort, Quick Sort, Insertion Sort", 
  		description: "I have designed and implemented a multicore integer sort algorithm, designed to minimize the time to sort large amount of integers. It uses bucket sort, splitting up an array of integers into \"buckets\" where each bucket is sorted by a separate thread.",
  		imgurl: "sorting.png",
        link: "",
        linktxt: ""},
    {name: "Android ROM Development", 
  		technologies: "C, C++, Java, Android build environment, Git", 
  		description: "I have released multiple custom Android ROMs for both the Acer Liquid A1 phone and Galaxy S2. I have also released ROMs built from source (Cyanogenmod and AOSP) and also done MIUI ports. I provided features not found in other ROMs, such as a custom settings app for Liquid A1 to change hardware settings and a minimalistic AOSP ROM, signed with release keys (vs. most other custom ROMs use the public AOSP dev keys). I actively shared my knowledge and experience with other Android developers and helped debugging and testing to grow the custom ROM community.",
  		imgurl: "android.png",
        link: "https://www.youtube.com/watch?v=ahtFzuWgA4M",
        linktxt: "Demo video"},
     {name: "Why Not Quiz", 
  		technologies: "Python, Django framework, Django cache framework, Ajax, jQuery, Javascript, Git, Django Social Auth Facebook login", 
  		description: "I have designed and developed a multiplayer web question-answer application based around an Ajax chat. Users can create and invite friends to a chat room where they compete by being the first one to answer automatically generated questions from the server. The game is database free by design and uses in memory cache instead to store game sessions between http requests. When new questions are needed, the server extracts movie facts from The Movie DB API to generate real-time questions. I configured and tested the game in a production environment by deploying it on an uWSGI application server.",
  		imgurl: "whynotquiz.png",
        link: "",
        linktxt: ""},
    {name: "Drop Box Dance", 
  		technologies: "C#, Kinect for Windows SDK, Visual Studio, Git", 
  		description: "I have designed and developed a PC application that used Kinect motion camera as an input method. A player can see a 2D representation of himself or herself on a screen and move accordingly to dodge falling boxes in the game. I also designed a menu system optimized for body inputs, designed game logic and wrote code to check collisions. ",
  		imgurl: "kinnect.png",
        link: "",
        linktxt: ""}]}];